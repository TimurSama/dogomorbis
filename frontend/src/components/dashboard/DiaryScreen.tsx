'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';
import { 
  BookOpen, 
  Plus, 
  Calendar, 
  MapPin, 
  Clock,
  Heart,
  Camera,
  Edit,
  Trash2,
  Filter,
  Search
} from 'lucide-react';
import { Button } from '@/components/ui/button';

interface DiaryEntry {
  id: string;
  date: string;
  title: string;
  content: string;
  location: string;
  duration: number; // –≤ –º–∏–Ω—É—Ç–∞—Ö
  dogs: Array<{
    name: string;
    breed: string;
    mood: 'happy' | 'tired' | 'energetic' | 'calm';
  }>;
  weather: string;
  photos: string[];
  tags: string[];
  mood: 'excellent' | 'good' | 'average' | 'poor';
  notes?: string;
}

export function DiaryScreen() {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());
  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());

  const mockEntries: DiaryEntry[] = [
    {
      id: '1',
      date: '2024-01-15',
      title: '–£—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≥—É–ª–∫–∞ –≤ –ø–∞—Ä–∫–µ',
      content: '–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ —Å –ë–æ–±–∏–∫–æ–º –≤ –ø–∞—Ä–∫–µ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏. –û–Ω –±—ã–ª –æ—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω—ã–º –∏ –≤–µ—Å–µ–ª—ã–º!',
      location: '–ü–∞—Ä–∫ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏',
      duration: 45,
      dogs: [
        { name: '–ë–æ–±–∏–∫', breed: '–õ–∞–±—Ä–∞–¥–æ—Ä', mood: 'energetic' }
      ],
      weather: '–°–æ–ª–Ω–µ—á–Ω–æ, +5¬∞C',
      photos: ['/api/placeholder/200/150', '/api/placeholder/200/150'],
      tags: ['–ø—Ä–æ–≥—É–ª–∫–∞', '–ø–∞—Ä–∫', '—É—Ç—Ä–æ'],
      mood: 'excellent',
      notes: '–í—Å—Ç—Ä–µ—Ç–∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–æ–±–∞—á–Ω–∏–∫–æ–≤, –ë–æ–±–∏–∫ —Ö–æ—Ä–æ—à–æ –∏–≥—Ä–∞–ª —Å –¥—Ä—É–≥–∏–º–∏ —Å–æ–±–∞–∫–∞–º–∏'
    },
    {
      id: '2',
      date: '2024-01-14',
      title: '–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞ –≤ –∫–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ',
      content: '–ó–∞–Ω—è—Ç–∏–µ –ø–æ –±–∞–∑–æ–≤—ã–º –∫–æ–º–∞–Ω–¥–∞–º. –ë–æ–±–∏–∫ –ø–æ–∫–∞–∑–∞–ª —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥ "—Å–∏–¥–µ—Ç—å" –∏ "–ª–µ–∂–∞—Ç—å".',
      location: '–ö–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä "–î—Ä—É–≥"',
      duration: 60,
      dogs: [
        { name: '–ë–æ–±–∏–∫', breed: '–õ–∞–±—Ä–∞–¥–æ—Ä', mood: 'calm' }
      ],
      weather: '–û–±–ª–∞—á–Ω–æ, +2¬∞C',
      photos: ['/api/placeholder/200/150'],
      tags: ['–¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞', '–∫–æ–º–∞–Ω–¥—ã', '–æ–±—É—á–µ–Ω–∏–µ'],
      mood: 'good',
      notes: '–¢—Ä–µ–Ω–µ—Ä –ø–æ—Ö–≤–∞–ª–∏–ª –ë–æ–±–∏–∫–∞ –∑–∞ –ø–æ—Å–ª—É—à–∞–Ω–∏–µ'
    },
    {
      id: '3',
      date: '2024-01-13',
      title: '–í–µ—á–µ—Ä–Ω—è—è –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ —Ä–∞–π–æ–Ω—É',
      content: '–°–ø–æ–∫–æ–π–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –∑–Ω–∞–∫–æ–º–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É. –ë–æ–±–∏–∫ –±—ã–ª –Ω–µ–º–Ω–æ–≥–æ —É—Å—Ç–∞–≤—à–∏–º –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—è.',
      location: '–†–∞–π–æ–Ω –°–æ–∫–æ–ª—å–Ω–∏–∫–∏',
      duration: 30,
      dogs: [
        { name: '–ë–æ–±–∏–∫', breed: '–õ–∞–±—Ä–∞–¥–æ—Ä', mood: 'tired' }
      ],
      weather: '–î–æ–∂–¥—å, +1¬∞C',
      photos: [],
      tags: ['–ø—Ä–æ–≥—É–ª–∫–∞', '–≤–µ—á–µ—Ä', '–¥–æ–∂–¥—å'],
      mood: 'average',
      notes: '–ü—Ä–∏—à–ª–æ—Å—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–æ–≥—É–ª–∫—É –∏–∑-–∑–∞ –¥–æ–∂–¥—è'
    },
  ];

  const getMoodColor = (mood: string) => {
    switch (mood) {
      case 'excellent': return 'bg-green-100 text-green-700';
      case 'good': return 'bg-blue-100 text-blue-700';
      case 'average': return 'bg-yellow-100 text-yellow-700';
      case 'poor': return 'bg-red-100 text-red-700';
      default: return 'bg-gray-100 text-gray-700';
    }
  };

  const getMoodIcon = (mood: string) => {
    switch (mood) {
      case 'excellent': return 'üòä';
      case 'good': return 'üôÇ';
      case 'average': return 'üòê';
      case 'poor': return 'üòî';
      default: return 'üòê';
    }
  };

  const getDogMoodColor = (mood: string) => {
    switch (mood) {
      case 'happy': return 'bg-green-100 text-green-700';
      case 'energetic': return 'bg-blue-100 text-blue-700';
      case 'calm': return 'bg-purple-100 text-purple-700';
      case 'tired': return 'bg-orange-100 text-orange-700';
      default: return 'bg-gray-100 text-gray-700';
    }
  };

  const filteredEntries = mockEntries.filter(entry => {
    const entryDate = new Date(entry.date);
    const matchesDate = entryDate.getMonth() === selectedMonth && entryDate.getFullYear() === selectedYear;
    const matchesSearch = entry.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         entry.content.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         entry.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    return matchesDate && matchesSearch;
  });

  const months = [
    '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
    '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
  ];

  return (
    <div className="h-full flex flex-col bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50 overflow-hidden fur-texture">
      {/* Header */}
      <div className="bg-white/90 backdrop-blur-sm border-b border-pink-200/30 p-4 flex-shrink-0 soft-shadow pencil-border">
        <div className="flex items-center justify-between mb-4">
          <div>
            <h1 className="text-xl font-bold text-purple-700 font-display">–î–Ω–µ–≤–Ω–∏–∫</h1>
            <p className="text-sm text-purple-600">–ó–∞–ø–∏—Å–∏ –æ –ø—Ä–æ–≥—É–ª–∫–∞—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
          </div>
          <div className="flex items-center space-x-2">
            <Button variant="outline" size="sm" className="text-purple-600 border-purple-300 hover:bg-purple-50">
              <Filter className="h-4 w-4 mr-2" />
              –§–∏–ª—å—Ç—Ä—ã
            </Button>
            <Button variant="default" size="sm" className="bg-gradient-to-r from-pink-300 to-purple-400 hover:from-pink-400 hover:to-purple-500 text-purple-800">
              <Plus className="h-4 w-4 mr-2" />
              –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å
            </Button>
          </div>
        </div>

        {/* Search and Date Filter */}
        <div className="flex space-x-4 mb-4">
          <div className="flex-1 relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-purple-400" />
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full pl-10 pr-4 py-2 border border-pink-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white/80 backdrop-blur-sm text-gray-800"
            />
          </div>
          <div className="flex space-x-2">
            <select
              value={selectedMonth}
              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}
              className="px-3 py-2 border border-pink-300 rounded-xl bg-white/80 backdrop-blur-sm text-gray-800 focus:ring-2 focus:ring-purple-500"
            >
              {months.map((month, index) => (
                <option key={index} value={index}>{month}</option>
              ))}
            </select>
            <select
              value={selectedYear}
              onChange={(e) => setSelectedYear(parseInt(e.target.value))}
              className="px-3 py-2 border border-pink-300 rounded-xl bg-white/80 backdrop-blur-sm text-gray-800 focus:ring-2 focus:ring-purple-500"
            >
              <option value={2024}>2024</option>
              <option value={2023}>2023</option>
            </select>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="flex-1 overflow-y-auto p-4 bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50">
        <div className="space-y-4">
          {filteredEntries.map((entry, index) => (
            <motion.div
              key={entry.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1 }}
              className="bg-white/95 backdrop-blur-sm rounded-3xl p-6 soft-shadow pencil-border fur-texture"
            >
              <div className="flex items-start justify-between mb-4">
                <div className="flex-1">
                  <div className="flex items-center space-x-2 mb-2">
                    <Calendar className="h-4 w-4 text-purple-500" />
                    <span className="text-sm text-gray-700">{entry.date}</span>
                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getMoodColor(entry.mood)}`}>
                      {getMoodIcon(entry.mood)} {entry.mood}
                    </span>
                  </div>
                  <h3 className="text-lg font-semibold text-gray-800 mb-2">{entry.title}</h3>
                  <p className="text-gray-700 mb-3">{entry.content}</p>
                </div>
                <div className="flex items-center space-x-2">
                  <Button variant="ghost" size="sm" className="text-gray-600 hover:text-purple-600">
                    <Edit className="h-4 w-4" />
                  </Button>
                  <Button variant="ghost" size="sm" className="text-gray-600 hover:text-red-600">
                    <Trash2 className="h-4 w-4" />
                  </Button>
                </div>
              </div>

              <div className="grid grid-cols-2 gap-4 mb-4">
                <div className="flex items-center space-x-2">
                  <MapPin className="h-4 w-4 text-purple-500" />
                  <span className="text-sm text-gray-700">{entry.location}</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Clock className="h-4 w-4 text-purple-500" />
                  <span className="text-sm text-gray-700">{entry.duration} –º–∏–Ω</span>
                </div>
                <div className="flex items-center space-x-2">
                  <span className="text-sm text-gray-700">üå§Ô∏è {entry.weather}</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Camera className="h-4 w-4 text-purple-500" />
                  <span className="text-sm text-gray-700">{entry.photos.length} —Ñ–æ—Ç–æ</span>
                </div>
              </div>

              <div className="mb-4">
                <p className="text-sm text-gray-700 mb-2">–°–æ–±–∞–∫–∏:</p>
                <div className="flex flex-wrap gap-2">
                  {entry.dogs.map((dog, dogIndex) => (
                    <span
                      key={dogIndex}
                      className={`px-2 py-1 rounded-full text-xs font-medium ${getDogMoodColor(dog.mood)}`}
                    >
                      {dog.name} ({dog.breed}) - {dog.mood}
                    </span>
                  ))}
                </div>
              </div>

              <div className="mb-4">
                <p className="text-sm text-gray-700 mb-2">–¢–µ–≥–∏:</p>
                <div className="flex flex-wrap gap-2">
                  {entry.tags.map((tag, tagIndex) => (
                    <span
                      key={tagIndex}
                      className="px-2 py-1 bg-purple-100 text-purple-700 rounded-full text-xs"
                    >
                      #{tag}
                    </span>
                  ))}
                </div>
              </div>

              {entry.notes && (
                <div className="mb-4">
                  <p className="text-sm text-gray-700 mb-2">–ó–∞–º–µ—Ç–∫–∏:</p>
                  <p className="text-sm text-gray-600 bg-pink-50 p-3 rounded-xl">{entry.notes}</p>
                </div>
              )}

              {entry.photos.length > 0 && (
                <div className="flex space-x-2 overflow-x-auto">
                  {entry.photos.map((photo, photoIndex) => (
                    <img
                      key={photoIndex}
                      src={photo}
                      alt={`–§–æ—Ç–æ ${photoIndex + 1}`}
                      className="w-20 h-20 rounded-xl object-cover flex-shrink-0"
                    />
                  ))}
                </div>
              )}
            </motion.div>
          ))}
        </div>

        {filteredEntries.length === 0 && (
          <div className="text-center py-12">
            <BookOpen className="h-16 w-16 text-purple-300 mx-auto mb-4" />
            <h3 className="text-lg font-semibold text-gray-800 mb-2">–ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-gray-600">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ</p>
          </div>
        )}
      </div>
    </div>
  );
}
