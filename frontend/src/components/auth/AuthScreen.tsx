'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { LoginForm } from './LoginForm';
import { RegisterForm } from './RegisterForm';
import { DogIcon, HeartIcon, MapIcon, UsersIcon, ArrowLeft } from 'lucide-react';

interface AuthScreenProps {
  onBackToGuest?: () => void;
}

export function AuthScreen({ onBackToGuest }: AuthScreenProps) {
  const [isLogin, setIsLogin] = useState(true);

  const features = [
    {
      icon: <DogIcon className="w-6 h-6" />,
      title: '–ü—Ä–æ—Ñ–∏–ª–∏ —Å–æ–±–∞–∫',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –≤–∞—à–∏—Ö –ø–∏—Ç–æ–º—Ü–µ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π',
    },
    {
      icon: <MapIcon className="w-6 h-6" />,
      title: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞',
      description: '–ù–∞—Ö–æ–¥–∏—Ç–µ –º–µ—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫ –∏ –¥—Ä—É–≥–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏',
    },
    {
      icon: <UsersIcon className="w-6 h-6" />,
      title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å',
      description: '–û–±—â–∞–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏, –¥–µ–ª–∏—Ç–µ—Å—å —Ñ–æ—Ç–æ –∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏',
    },
    {
      icon: <HeartIcon className="w-6 h-6" />,
      title: '–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è',
      description: '–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∫–æ—Å—Ç–æ—á–∫–∏ –∏ –∫–ª—É–±–∫–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
    },
  ];

  return (
    <div className="min-h-screen flex">
      {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
      <div className="hidden lg:flex lg:w-1/2 bg-blue-600 p-8 text-white">
        <div className="max-w-md mx-auto">
          <div className="mb-8">
            <h1 className="text-4xl font-bold mb-4">üêï Dogymorbis</h1>
            <p className="text-xl text-blue-100">
              –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫
            </p>
          </div>

          <div className="space-y-6">
            {features.map((feature, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: index * 0.1 }}
                className="flex items-start space-x-4"
              >
                <div className="flex-shrink-0 w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center">
                  {feature.icon}
                </div>
                <div>
                  <h3 className="text-lg font-semibold mb-1">{feature.title}</h3>
                  <p className="text-blue-100">{feature.description}</p>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </div>

      {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–æ—Ä–º–æ–π */}
      <div className="w-full lg:w-1/2 flex flex-col">
        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        {onBackToGuest && (
          <div className="p-4">
            <button
              onClick={onBackToGuest}
              className="flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors"
            >
              <ArrowLeft className="w-4 h-4" />
              <span>–ù–∞–∑–∞–¥ –∫ –≥–æ—Å—Ç–µ–≤–æ–º—É —Ä–µ–∂–∏–º—É</span>
            </button>
          </div>
        )}

        {/* –§–æ—Ä–º–∞ */}
        <div className="flex-1 flex items-center justify-center p-8">
          <div className="w-full max-w-md">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-gray-900 mb-2">
                {isLogin ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!' : '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º'}
              </h2>
              <p className="text-gray-600">
                {isLogin 
                  ? '–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç' 
                  : '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —Å–æ–±–∞—á–Ω–∏–∫–∞–º–∏'
                }
              </p>
            </div>

            <AnimatePresence mode="wait">
              {isLogin ? (
                <motion.div
                  key="login"
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -20 }}
                  transition={{ duration: 0.3 }}
                >
                  <LoginForm />
                </motion.div>
              ) : (
                <motion.div
                  key="register"
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -20 }}
                  transition={{ duration: 0.3 }}
                >
                  <RegisterForm />
                </motion.div>
              )}
            </AnimatePresence>

            <div className="text-center mt-6">
              <p className="text-gray-600">
                {isLogin ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?' : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?'}
                <button
                  onClick={() => setIsLogin(!isLogin)}
                  className="ml-2 text-blue-600 hover:text-blue-700 font-medium"
                >
                  {isLogin ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–í–æ–π—Ç–∏'}
                </button>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}