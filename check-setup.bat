@echo off
chcp 65001 >nul
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ Dogymorbis...
echo.

echo üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...
docker --version >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    docker --version
) else (
    echo ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

docker-compose --version >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    docker-compose --version
) else (
    echo ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

echo.
echo üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js...
node --version >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    node --version
) else (
    echo ‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

npm --version >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    npm --version
) else (
    echo ‚ùå npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
)

echo.
echo üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞...

if exist "package.json" (
    echo ‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π package.json –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π package.json –Ω–µ –Ω–∞–π–¥–µ–Ω
)

if exist "docker-compose.dev.yml" (
    echo ‚úÖ docker-compose.dev.yml –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå docker-compose.dev.yml –Ω–µ –Ω–∞–π–¥–µ–Ω
)

if exist "start-dev.sh" (
    echo ‚úÖ start-dev.sh –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå start-dev.sh –Ω–µ –Ω–∞–π–¥–µ–Ω
)

if exist "backend\package.json" (
    echo ‚úÖ Backend package.json –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå Backend package.json –Ω–µ –Ω–∞–π–¥–µ–Ω
)

if exist "frontend\package.json" (
    echo ‚úÖ Frontend package.json –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå Frontend package.json –Ω–µ –Ω–∞–π–¥–µ–Ω
)

if exist "backend\prisma\schema.prisma" (
    echo ‚úÖ Prisma —Å—Ö–µ–º–∞ –Ω–∞–π–¥–µ–Ω–∞
) else (
    echo ‚ùå Prisma —Å—Ö–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
)

echo.
echo üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...

if exist "backend\.env" (
    echo ‚úÖ Backend .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω
) else (
    if exist "backend\env.example" (
        echo ‚ùå Backend .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (–µ—Å—Ç—å env.example)
        echo üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª: copy backend\env.example backend\.env
    ) else (
        echo ‚ùå Backend .env —Ñ–∞–π–ª –∏ env.example –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    )
)

if exist "frontend\.env.local" (
    echo ‚úÖ Frontend .env.local —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå Frontend .env.local —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo üí° –°–æ–∑–¥–∞–π—Ç–µ .env.local —Ñ–∞–π–ª —Å NEXT_PUBLIC_API_URL=http://localhost:3001
)

echo.
echo üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...

if exist "node_modules" (
    echo ‚úÖ –ö–æ—Ä–Ω–µ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
) else (
    echo ‚ùå –ö–æ—Ä–Ω–µ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    echo üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install
)

if exist "backend\node_modules" (
    echo ‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
) else (
    echo ‚ùå Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    echo üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: cd backend ^&^& npm install
)

if exist "frontend\node_modules" (
    echo ‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
) else (
    echo ‚ùå Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    echo üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: cd frontend ^&^& npm install
)

echo.
echo üìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:

set ERRORS=0

if not exist "package.json" set /a ERRORS+=1
if not exist "docker-compose.dev.yml" set /a ERRORS+=1
if not exist "start-dev.sh" set /a ERRORS+=1
if not exist "backend\package.json" set /a ERRORS+=1
if not exist "frontend\package.json" set /a ERRORS+=1
if not exist "backend\prisma\schema.prisma" set /a ERRORS+=1

if %ERRORS% equ 0 (
    echo üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!
    echo.
    echo üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
    echo    ./start-dev.sh
    echo.
    echo üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ SETUP.md
) else (
    echo ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.
    echo.
    echo üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
    echo    1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo    2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo    3. –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã
    echo    4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: check-setup.bat
)

echo.
echo üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
echo    ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: SETUP.md
echo    ‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:3001/api/docs (–ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞)
echo    ‚Ä¢ –õ–æ–≥–∏: docker-compose -f docker-compose.dev.yml logs -f

pause

