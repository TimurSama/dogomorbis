version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dogymorbis_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dogymorbis_dev
      POSTGRES_USER: dogymorbis
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dogymorbis_network

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    container_name: dogymorbis_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dogymorbis_network

  # MailHog для тестирования email
  mailhog:
    image: mailhog/mailhog:latest
    container_name: dogymorbis_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - dogymorbis_network

  # MinIO для S3-совместимого хранилища файлов
  minio:
    image: minio/minio:latest
    container_name: dogymorbis_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: dogymorbis
      MINIO_ROOT_PASSWORD: password123
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - dogymorbis_network

  # Elasticsearch для поиска (опционально)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: dogymorbis_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - dogymorbis_network

  # Kibana для визуализации данных (опционально)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: dogymorbis_kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - dogymorbis_network

  # pgAdmin для управления PostgreSQL (опционально)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dogymorbis_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dogymorbis.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dogymorbis_network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dogymorbis_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dogymorbis:password@postgres:5432/dogymorbis_dev
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - dogymorbis_network

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dogymorbis_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - dogymorbis_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  dogymorbis_network:
    driver: bridge 