import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const hashedPassword = await bcrypt.hash('password123', 12);

  const users = await Promise.all([
    // –ê–∫–∫–∞—É–Ω—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    prisma.user.upsert({
      where: { email: 'dev@dogymorbis.com' },
      update: {},
      create: {
        email: 'dev@dogymorbis.com',
        username: 'dogymorbis_dev',
        password: hashedPassword,
        firstName: '–ö–æ–º–∞–Ω–¥–∞',
        lastName: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
        bio: '–ú—ã —Å–æ–∑–¥–∞–µ–º –ª—É—á—à–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫! üêï',
        isVerified: true,
        isActive: true,
        isPremium: true,
        psychotype: 'EXTROVERT',
        psychotypeTestCompleted: true,
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, –æ—Ñ–∏—Å Dogymorbis' }),
      },
    }),
    // –ê–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏
    prisma.user.upsert({
      where: { email: 'company@dogymorbis.com' },
      update: {},
      create: {
        email: 'company@dogymorbis.com',
        username: 'dogymorbis_official',
        password: hashedPassword,
        firstName: 'Dogymorbis',
        lastName: 'Official',
        bio: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Dogymorbis - —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫! üêæ',
        isVerified: true,
        isActive: true,
        isPremium: true,
        psychotype: 'EXTROVERT',
        psychotypeTestCompleted: true,
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ Dogymorbis' }),
      },
    }),
    // –ê–¥–º–∏–Ω –∞–∫–∫–∞—É–Ω—Ç
    prisma.user.upsert({
      where: { email: 'admin@dogymorbis.com' },
      update: {},
      create: {
        email: 'admin@dogymorbis.com',
        username: 'admin',
        password: hashedPassword,
        firstName: '–ê–¥–º–∏–Ω',
        lastName: '–ê–¥–º–∏–Ω–æ–≤',
        isVerified: true,
        isActive: true,
        psychotype: 'EXTROVERT',
        psychotypeTestCompleted: true,
      },
    }),
    prisma.user.upsert({
      where: { email: 'user1@dogymorbis.com' },
      update: {},
      create: {
        email: 'user1@dogymorbis.com',
        username: 'doglover1',
        password: hashedPassword,
        firstName: '–ê–Ω–Ω–∞',
        lastName: '–ü–µ—Ç—Ä–æ–≤–∞',
        isVerified: true,
        isActive: true,
        psychotype: 'EXTROVERT',
        psychotypeTestCompleted: true,
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å' }),
      },
    }),
    prisma.user.upsert({
      where: { email: 'user2@dogymorbis.com' },
      update: {},
      create: {
        email: 'user2@dogymorbis.com',
        username: 'puppyfriend',
        password: hashedPassword,
        firstName: '–ú–∏—Ö–∞–∏–ª',
        lastName: '–°–∏–¥–æ—Ä–æ–≤',
        isVerified: true,
        isActive: true,
        psychotype: 'INTROVERT',
        psychotypeTestCompleted: true,
        location: JSON.stringify({ lat: 55.7658, lng: 37.6276, address: '–ú–æ—Å–∫–≤–∞, –ê—Ä–±–∞—Ç' }),
      },
    }),
    prisma.user.upsert({
      where: { email: 'partner@dogymorbis.com' },
      update: {},
      create: {
        email: 'partner@dogymorbis.com',
        username: 'vetclinic',
        password: hashedPassword,
        firstName: '–ï–ª–µ–Ω–∞',
        lastName: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–≤–∞',
        isVerified: true,
        isActive: true,
        psychotype: 'AMBIVERT',
        psychotypeTestCompleted: true,
      },
    }),
  ]);

  console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —É—Ä–æ–≤–Ω–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  await Promise.all(
    users.map(user =>
      prisma.level.upsert({
        where: { userId: user.id },
        update: {},
        create: {
          userId: user.id,
          level: Math.floor(Math.random() * 10) + 1,
          experience: Math.floor(Math.random() * 1000),
          tier: ['BRONZE', 'SILVER', 'GOLD'][Math.floor(Math.random() * 3)],
        },
      })
    )
  );

  console.log('‚úÖ –£—Ä–æ–≤–Ω–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  await prisma.adminProfile.upsert({
    where: { userId: users[2].id },
    update: {},
    create: {
      userId: users[2].id,
      role: 'SUPER_ADMIN',
      permissions: JSON.stringify(['users:read', 'users:write', 'partners:verify', 'system:stats']),
    },
  });

  console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞–Ω');

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞
  await prisma.partnerProfile.upsert({
    where: { userId: users[4].id },
    update: {},
    create: {
      userId: users[4].id,
      category: 'VET',
      name: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–ó–¥–æ—Ä–æ–≤—ã–µ –ª–∞–ø–∫–∏"',
      description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ —Å –ø–æ–ª–Ω—ã–º —Å–ø–µ–∫—Ç—Ä–æ–º —É—Å–ª—É–≥ –¥–ª—è —Å–æ–±–∞–∫',
      website: 'https://healthy-paws.ru',
      location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, —É–ª. –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è, 1' }),
      contact: JSON.stringify({
        phone: '+7 (495) 123-45-67',
        email: 'info@healthy-paws.ru',
        workingHours: '–ü–Ω-–ü—Ç: 9:00-21:00, –°–±-–í—Å: 10:00-18:00',
      }),
      isVerified: true,
    },
  });

  console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±–∞–∫
  const dogs = await Promise.all([
    prisma.dog.create({
      data: {
        name: '–ë–æ–±–∏–∫',
        breed: '–õ–∞–±—Ä–∞–¥–æ—Ä',
        gender: 'MALE',
        dateOfBirth: new Date('2020-05-15'),
        weight: 25.5,
        height: 55,
        color: '–ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π',
        temperament: 'FRIENDLY,PLAYFUL,ENERGETIC',
        energyLevel: 'HIGH',
        sociability: 'VERY_SOCIAL',
        trainability: 'EASY',
        isNeutered: false,
        isVaccinated: true,
        isFriendly: true,
      },
    }),
    prisma.dog.create({
      data: {
        name: '–ú—É—Ä–∫–∞',
        breed: '–•–∞—Å–∫–∏',
        gender: 'FEMALE',
        dateOfBirth: new Date('2019-03-20'),
        weight: 22.0,
        height: 50,
        color: '–°–µ—Ä–æ-–±–µ–ª—ã–π',
        temperament: 'INDEPENDENT,ENERGETIC',
        energyLevel: 'VERY_HIGH',
        sociability: 'SOCIAL',
        trainability: 'MODERATE',
        isNeutered: true,
        isVaccinated: true,
        isFriendly: true,
      },
    }),
    prisma.dog.create({
      data: {
        name: '–†–µ–∫—Å',
        breed: '–ù–µ–º–µ—Ü–∫–∞—è –æ–≤—á–∞—Ä–∫–∞',
        gender: 'MALE',
        dateOfBirth: new Date('2021-08-10'),
        weight: 30.0,
        height: 60,
        color: '–ß–µ—Ä–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π',
        temperament: 'CALM,INDEPENDENT',
        energyLevel: 'MEDIUM',
        sociability: 'MODERATE',
        trainability: 'EASY',
        isNeutered: false,
        isVaccinated: true,
        isFriendly: true,
      },
    }),
  ]);

  console.log('‚úÖ –°–æ–±–∞–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏ –≤–ª–∞–¥–µ–Ω–∏—è
  await Promise.all([
    prisma.dogOwnership.create({
      data: {
        userId: users[1].id,
        dogId: dogs[0].id,
        role: 'PRIMARY',
      },
    }),
    prisma.dogOwnership.create({
      data: {
        userId: users[2].id,
        dogId: dogs[1].id,
        role: 'PRIMARY',
      },
    }),
    prisma.dogOwnership.create({
      data: {
        userId: users[1].id,
        dogId: dogs[2].id,
        role: 'PRIMARY',
      },
    }),
  ]);

  console.log('‚úÖ –°–≤—è–∑–∏ –≤–ª–∞–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ–±–∞–∫
  await Promise.all([
    prisma.dogPhoto.create({
      data: {
        dogId: dogs[0].id,
        url: 'https://images.unsplash.com/photo-1552053831-71594a27632d?w=400',
        caption: '–ë–æ–±–∏–∫ –≤ –ø–∞—Ä–∫–µ',
        isPrimary: true,
      },
    }),
    prisma.dogPhoto.create({
      data: {
        dogId: dogs[1].id,
        url: 'https://images.unsplash.com/photo-1583337130417-3346a1be7dee?w=400',
        caption: '–ú—É—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–≥—É–ª–∫–µ',
        isPrimary: true,
      },
    }),
    prisma.dogPhoto.create({
      data: {
        dogId: dogs[2].id,
        url: 'https://images.unsplash.com/photo-1605568427561-40dd23c2acea?w=400',
        caption: '–†–µ–∫—Å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ',
        isPrimary: true,
      },
    }),
  ]);

  console.log('‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ–±–∞–∫ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã –æ—Ç –∏–º–µ–Ω–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
  const posts = await Promise.all([
    // –ü–æ—Å—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    prisma.post.create({
      data: {
        userId: users[0].id, // dev@dogymorbis.com
        content: 'üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis! –ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—É—é —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫, –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏—è–º–∏ –æ —Å–≤–æ–∏—Ö –ø–∏—Ç–æ–º—Ü–∞—Ö –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ—Å—Ç–æ—á–∫–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! üêï‚ú®',
        images: JSON.stringify(['https://images.unsplash.com/photo-1601758228041-f3b2795255f1?w=400']),
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, –æ—Ñ–∏—Å Dogymorbis' }),
        isPublic: true,
      },
    }),
    // –ü–æ—Å—Ç –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏
    prisma.post.create({
      data: {
        userId: users[1].id, // company@dogymorbis.com
        content: 'üéâ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –ú—ã —Å–æ–∑–¥–∞–ª–∏ Dogymorbis —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å - –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –¥—Ä—É–∂–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, –ø—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤! üêæüíù',
        images: JSON.stringify(['https://images.unsplash.com/photo-1583337130417-3346a1be7dee?w=400']),
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ Dogymorbis' }),
        isPublic: true,
      },
    }),
    // –ü–æ—Å—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
    prisma.post.create({
      data: {
        userId: users[0].id, // dev@dogymorbis.com
        content: 'üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ 100 –∫–æ—Å—Ç–æ—á–µ–∫ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í–∞—à –¥—Ä—É–≥ —Ç–æ–∂–µ –ø–æ–ª—É—á–∏—Ç 50 –∫–æ—Å—Ç–æ—á–µ–∫ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º –≤ –ø—Ä–æ—Ñ–∏–ª–µ üêïüí∞',
        images: JSON.stringify(['https://images.unsplash.com/photo-1552053831-71594a27632d?w=400']),
        isPublic: true,
      },
    }),
    // –ü–æ—Å—Ç –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ –∫–æ—Å—Ç–æ—á–∫–æ–Ω–æ–º–∏–∫–µ
    prisma.post.create({
      data: {
        userId: users[1].id, // company@dogymorbis.com
        content: 'ü¶¥ –ö–æ—Å—Ç–æ—á–∫–æ–Ω–æ–º–∏–∫–∞ –≤ –¥–µ–π—Å—Ç–≤–∏–∏! –°–æ–±–∏—Ä–∞–π—Ç–µ –∫–æ—Å—Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç—Ä–∞—Ç—å—Ç–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞ –ø–æ–ª–µ–∑–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –≤–∞—à–∏—Ö –ø–∏—Ç–æ–º—Ü–µ–≤. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –∫–æ—Å—Ç–æ—á–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –≥–æ—Ä–æ–¥–∞! üó∫Ô∏è‚ú®',
        images: JSON.stringify(['https://images.unsplash.com/photo-1605568427561-40dd23c2acea?w=400']),
        isPublic: true,
      },
    }),
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ—Å—Ç—ã
    prisma.post.create({
      data: {
        userId: users[3].id,
        dogId: dogs[0].id,
        content: '–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ —Å –ë–æ–±–∏–∫–æ–º! –û–Ω —Ç–∞–∫ —Ä–∞–¥–æ–≤–∞–ª—Å—è –Ω–æ–≤–æ–º—É –º—è—á–∏–∫—É üéæ',
        images: JSON.stringify(['https://images.unsplash.com/photo-1552053831-71594a27632d?w=400']),
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ' }),
        isPublic: true,
      },
    }),
    prisma.post.create({
      data: {
        userId: users[4].id,
        dogId: dogs[1].id,
        content: '–ú—É—Ä–∫–∞ –æ—Å–≤–æ–∏–ª–∞ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É "—Å–∏–¥–µ—Ç—å"! –ì–æ—Ä–∂—É—Å—å —Å–≤–æ–µ–π —É–º–Ω–∏—Ü–µ–π üêï',
        images: JSON.stringify(['https://images.unsplash.com/photo-1583337130417-3346a1be7dee?w=400']),
        isPublic: true,
      },
    }),
  ]);

  console.log('‚úÖ –ü–æ—Å—Ç—ã —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  await Promise.all([
    prisma.transaction.create({
      data: {
        userId: users[1].id,
        type: 'EARN',
        currency: 'BONES',
        amount: 50,
        description: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
      },
    }),
    prisma.transaction.create({
      data: {
        userId: users[1].id,
        type: 'EARN',
        currency: 'BONES',
        amount: 25,
        description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å–æ–±–∞–∫–∏',
      },
    }),
    prisma.transaction.create({
      data: {
        userId: users[1].id,
        type: 'EARN',
        currency: 'BONES',
        amount: 5,
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞',
      },
    }),
    prisma.transaction.create({
      data: {
        userId: users[2].id,
        type: 'EARN',
        currency: 'BONES',
        amount: 50,
        description: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
      },
    }),
    prisma.transaction.create({
      data: {
        userId: users[2].id,
        type: 'EARN',
        currency: 'BONES',
        amount: 25,
        description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å–æ–±–∞–∫–∏',
      },
    }),
  ]);

  console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
  await Promise.all([
    prisma.collectibleSpawn.create({
      data: {
        type: 'BONE',
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176 }),
        value: 10,
        expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // 24 —á–∞—Å–∞
      },
    }),
    prisma.collectibleSpawn.create({
      data: {
        type: 'YARN_BALL',
        location: JSON.stringify({ lat: 55.7658, lng: 37.6276 }),
        value: 5,
        expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // 24 —á–∞—Å–∞
      },
    }),
  ]);

  console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏
  const services = await Promise.all([
    prisma.service.create({
      data: {
        partnerId: (await prisma.partnerProfile.findUnique({ where: { userId: users[3].id } }))!.id,
        category: 'VET',
        title: '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä',
        description: '–ü–æ–ª–Ω—ã–π –æ—Å–º–æ—Ç—Ä —Å–æ–±–∞–∫–∏, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞',
        price: 2000,
        duration: 60,
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, —É–ª. –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è, 1' }),
      },
    }),
    prisma.service.create({
      data: {
        partnerId: (await prisma.partnerProfile.findUnique({ where: { userId: users[3].id } }))!.id,
        category: 'GROOMING',
        title: '–°—Ç—Ä–∏–∂–∫–∞ –∏ –º—ã—Ç—å–µ',
        description: '–ü–æ–ª–Ω—ã–π –≥—Ä—É–º–∏–Ω–≥: —Å—Ç—Ä–∏–∂–∫–∞, –º—ã—Ç—å–µ, —Å—É—à–∫–∞, —Å—Ç—Ä–∏–∂–∫–∞ –∫–æ–≥—Ç–µ–π',
        price: 1500,
        duration: 90,
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ú–æ—Å–∫–≤–∞, —É–ª. –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è, 1' }),
      },
    }),
  ]);

  console.log('‚úÖ –£—Å–ª—É–≥–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª–µ
  await Promise.all([
    prisma.journalEntry.create({
      data: {
        userId: users[1].id,
        dogId: dogs[0].id,
        mood: 'HAPPY',
        activity: 'WALK',
        content: '–û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –≤ –ø–∞—Ä–∫–µ! –ë–æ–±–∏–∫ –±—ã–ª –æ—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω—ã–º –∏ –≤–µ—Å–µ–ª—ã–º.',
        location: JSON.stringify({ lat: 55.7558, lng: 37.6176, address: '–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ' }),
      },
    }),
    prisma.journalEntry.create({
      data: {
        userId: users[2].id,
        dogId: dogs[1].id,
        mood: 'EXCITED',
        activity: 'TRAINING',
        content: '–ú—É—Ä–∫–∞ –≤—ã—É—á–∏–ª–∞ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É! –û—á–µ–Ω—å –≥–æ—Ä–∂—É—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º.',
      },
    }),
  ]);

  console.log('‚úÖ –ó–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª–µ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ü–µ–ª–∏
  await Promise.all([
    prisma.goal.create({
      data: {
        userId: users[1].id,
        dogId: dogs[0].id,
        type: 'WALKING',
        title: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏',
        description: '–ì—É–ª—è—Ç—å —Å –ë–æ–±–∏–∫–æ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –º–∏–Ω–∏–º—É–º 30 –º–∏–Ω—É—Ç',
        target: 30,
        current: 15,
        unit: '–º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å',
        deadline: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 –¥–Ω–µ–π
      },
    }),
    prisma.goal.create({
      data: {
        userId: users[2].id,
        dogId: dogs[1].id,
        type: 'TRAINING',
        title: '–ò–∑—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥',
        description: '–í—ã—É—á–∏—Ç—å 5 –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –ú—É—Ä–∫–æ–π',
        target: 5,
        current: 2,
        unit: '–∫–æ–º–∞–Ω–¥',
        deadline: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 –¥–Ω–µ–π
      },
    }),
  ]);

  console.log('‚úÖ –¶–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  await Promise.all([
    prisma.achievement.create({
      data: {
        userId: users[1].id,
        type: 'WALKING',
        title: '–ü–µ—Ä–≤–∞—è –ø—Ä–æ–≥—É–ª–∫–∞',
        description: '–°–æ–≤–µ—Ä—à–∏–ª–∏ –ø–µ—Ä–≤—É—é –ø—Ä–æ–≥—É–ª–∫—É —Å —Å–æ–±–∞–∫–æ–π',
        icon: 'üö∂‚Äç‚ôÇÔ∏è',
        earnedAt: new Date(),
      },
    }),
    prisma.achievement.create({
      data: {
        userId: users[2].id,
        type: 'TRAINING',
        title: '–£—á–µ–Ω–∏–∫',
        description: '–í—ã—É—á–∏–ª–∏ –ø–µ—Ä–≤—É—é –∫–æ–º–∞–Ω–¥—É',
        icon: 'üéì',
        earnedAt: new Date(),
      },
    }),
  ]);

  console.log('‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤
  await Promise.all([
    // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    prisma.message.create({
      data: {
        fromUserId: users[0].id, // dev@dogymorbis.com
        toUserId: users[3].id, // user1
        type: 'TEXT',
        content: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis! üêï –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π - –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 100 –∫–æ—Å—Ç–æ—á–µ–∫! –£–¥–∞—á–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è! üöÄ',
      },
    }),
    prisma.message.create({
      data: {
        fromUserId: users[0].id, // dev@dogymorbis.com
        toUserId: users[4].id, // user2
        type: 'TEXT',
        content: '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis! üêï –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π - –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 100 –∫–æ—Å—Ç–æ—á–µ–∫! –£–¥–∞—á–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è! üöÄ',
      },
    }),
    // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    prisma.message.create({
      data: {
        fromUserId: users[1].id, // company@dogymorbis.com
        toUserId: users[3].id, // user1
        type: 'TEXT',
        content: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é Dogymorbis! üéâ –ú—ã —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–∞–∫–∏—Ö –∑–∞–±–æ—Ç–ª–∏–≤—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫, –∫–∞–∫ –≤—ã. –ò–∑—É—á–∞–π—Ç–µ –∫–∞—Ä—Ç—É, —Å–æ–±–∏—Ä–∞–π—Ç–µ –∫–æ—Å—Ç–æ—á–∫–∏, –æ–±—â–∞–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ —Å–æ–±–∞—á–Ω–∏–∫–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ! üêæ‚ú®',
      },
    }),
    prisma.message.create({
      data: {
        fromUserId: users[1].id, // company@dogymorbis.com
        toUserId: users[4].id, // user2
        type: 'TEXT',
        content: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é Dogymorbis! üéâ –ú—ã —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–∞–∫–∏—Ö –∑–∞–±–æ—Ç–ª–∏–≤—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫, –∫–∞–∫ –≤—ã. –ò–∑—É—á–∞–π—Ç–µ –∫–∞—Ä—Ç—É, —Å–æ–±–∏—Ä–∞–π—Ç–µ –∫–æ—Å—Ç–æ—á–∫–∏, –æ–±—â–∞–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ —Å–æ–±–∞—á–Ω–∏–∫–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ! üêæ‚ú®',
      },
    }),
  ]);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  await Promise.all([
    prisma.notification.create({
      data: {
        userId: users[3].id,
        type: 'SYSTEM',
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis!',
        message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis! –ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤–∞—à–µ–π —Å–æ–±–∞–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ 50 –∫–æ—Å—Ç–æ—á–µ–∫!',
      },
    }),
    prisma.notification.create({
      data: {
        userId: users[4].id,
        type: 'SYSTEM',
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis!',
        message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dogymorbis! –ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤–∞—à–µ–π —Å–æ–±–∞–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ 50 –∫–æ—Å—Ç–æ—á–µ–∫!',
      },
    }),
    prisma.notification.create({
      data: {
        userId: users[3].id,
        type: 'ACHIEVEMENT',
        title: '–ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!',
        message: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ "–ü–µ—Ä–≤–∞—è –ø—Ä–æ–≥—É–ª–∫–∞"',
      },
    }),
    prisma.notification.create({
      data: {
        userId: users[4].id,
        type: 'ACHIEVEMENT',
        title: '–ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!',
        message: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ "–£—á–µ–Ω–∏–∫"',
      },
    }),
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
    prisma.notification.create({
      data: {
        userId: users[3].id,
        type: 'REFERRAL',
        title: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
        message: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ 100 –∫–æ—Å—Ç–æ—á–µ–∫ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º.',
      },
    }),
    prisma.notification.create({
      data: {
        userId: users[4].id,
        type: 'REFERRAL',
        title: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
        message: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ 100 –∫–æ—Å—Ç–æ—á–µ–∫ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º.',
      },
    }),
  ]);

  console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã');

  console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${users.length}`);
  console.log(`üêï –°–æ–±–∞–∫–∏: ${dogs.length}`);
  console.log(`üìù –ü–æ—Å—Ç—ã: ${posts.length}`);
  console.log(`üè• –£—Å–ª—É–≥–∏: ${services.length}`);
  console.log('\nüîë –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
  console.log('dev@dogymorbis.com / password123 (–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)');
  console.log('company@dogymorbis.com / password123 (–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Dogymorbis)');
  console.log('admin@dogymorbis.com / password123 (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)');
  console.log('user1@dogymorbis.com / password123 (–í–ª–∞–¥–µ–ª–µ—Ü –ë–æ–±–∏–∫–∞)');
  console.log('user2@dogymorbis.com / password123 (–í–ª–∞–¥–µ–ª–µ—Ü –ú—É—Ä–∫–∏)');
  console.log('partner@dogymorbis.com / password123 (–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞)');
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });

