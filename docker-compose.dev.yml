version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dogymorbis_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: dogymorbis_dev
      POSTGRES_USER: dogymorbis
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - dogymorbis_network_dev

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    container_name: dogymorbis_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - dogymorbis_network_dev

  # MailHog для тестирования email
  mailhog:
    image: mailhog/mailhog:latest
    container_name: dogymorbis_mailhog_dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - dogymorbis_network_dev

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dogymorbis_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dogymorbis:password@postgres:5432/dogymorbis_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      ENABLE_SWAGGER: "true"
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - dogymorbis_network_dev

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dogymorbis_frontend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - dogymorbis_network_dev

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  dogymorbis_network_dev:
    driver: bridge


